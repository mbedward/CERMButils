% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cleaning_functions.R
\name{assign_lines_to_groups}
\alias{assign_lines_to_groups}
\title{Identify groups of similar line features}
\usage{
assign_lines_to_groups(lines, max_nbr_dist = 50, use_attributes = NULL)
}
\arguments{
\item{lines}{An \code{'sf'} spatial data frame of input line features. This
must have a projected (i.e. non-geographic) coordinate reference system
assigned. All features should have single-part geometries; either type
\code{'LINESTRING'} or type \code{'MULTILINESTRING'} with one part.}

\item{max_nbr_dist}{(numeric; default 50) Threshold distance for grouped
lines. Two lines will be considered as potential members of a single group
if the closest distance between them is equal to or less than this
threshold distance.}

\item{use_attributes}{A character vector of one or more attribute names
corresponding to columns in the input \code{'sf'} data frame. If provided,
these attributes will be considered when grouping lines features in
addition to location and topological similarity. See example below.}
}
\value{
An integer vector of group ID values with length equal to the number
  of rows in the input \code{`sf`} data frame.
}
\description{
Layers of line features representing back-burning sometimes contain groups of
lines that appear to be duplicates, i.e. having identical or generally
similar geometries. This function attempts to identify such groups. Two or
more line features are considered to be members of a group if the closest
distance between them is less than a threshold distance, specified via the
(\code{max_nbr_dist}) argument.
}
\details{
\emph{Beware}: this function is not yet smart enough to distinguish between a
tightly clustered set of lines on the one hand, and a more dispersed set in
which pairs of lines are closer to each other than the specified threshold
distance. For example, lines forming a ladder arrangement over a substantial
distance, where each member is sufficiently close to at least one other,
would all be assigned to a single group.
}
\examples{
\dontrun{
# Default behaviour: assign group IDs to features based on similarity
# of location
ids <- assign_lines_to_groups(dat_firelines)

# Group on both location and the attributes 'IncidentName' and 'FIRELINETYPE'
ids <- assign_lines_to_groups(dat_firelines,
                              use_attributes = c("IncidentName", "FIRELINETYPE"))
}

}
