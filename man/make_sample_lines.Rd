% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sampling_functions.R
\name{make_sample_lines}
\alias{make_sample_lines}
\title{Generate sampling lines across back-burning line features}
\usage{
make_sample_lines(
  bb_lines,
  bb_id = "OID",
  line_spacing = 1000,
  line_half_length = 5000,
  trim_by = c("all", "parent", "none"),
  out_epsg = 8058,
  smoothing_bw = 1000
)
}
\arguments{
\item{bb_lines}{An \code{sf} spatial data frame containing one or more line
features representing back-burning lines. The data must have a coordinate
reference system defined with metres as map units (e.g. NSW Lambert/GDA94
EPSG:3308).}

\item{bb_id}{(character; default "OID") The name of a column in the
\code{bb_lines} data frame that uniquely identifies back-burning line
features.}

\item{line_spacing}{A single numeric value for the distance in metres
between sampling lines along each back-burning line feature.}

\item{line_half_length}{A single numeric value specifying the maximum
distance in metres that a sampling line will extend on either side of the
back-burning line.}

\item{trim_by}{(character) One of \code{('all', 'parent', 'none')}. May be
abbreviated. If \code{'all'} (default), each sample point must lie at a
greater distance to all back-burning lines than the preceding point AND
must be closer to the parent back-burning line than any other; if
\code{'parent'}, a similar increasing distance rule is applied but only in
relation to the parent back-burning line that the sample points are
associated with; if \code{'none'}, no distance rule applies.}

\item{out_epsg}{Integer EPSG code specifying the map projection for the
output progression polygons. This \emph{must} be a projected coordinate
system with metres as map units. The default is 8058 (NSW Lambert /
GDA2020).}

\item{smoothing_bw}{A single numeric value for the bandwidth (metres) of the
Gaussian kernel filter used to smooth each back-burning feature. The
default value of 1000m seems to give good results.}

\item{point_spacing}{A single numeric value specifying the uniform distance
between sample points along each sampling line. The first point is always
positioned at the intersection of the sampling line and the reference
back-burning line.}
}
\value{
An \code{sf} spatial data frame of sample point features with the
  following columns:

  \code{refid} Identifier of the input back-burning line feature that a point
  is sampling, with values taken from the input data column specified by the
  \code{bb_id} argument.

  \code{line_index} Integer index (from 1) of the sampling lines within a
  given back-burning line.

  \code{segment} Either \code{'L'} or \code{'R'} indicating the position of
  the sampling line on the left or right of the back-burning line. Note that
  left and right, as used here, are simply relative to the digitizing
  direction (i.e. order of vertices) of the back-burning line.

  \code{geom} The feature geometry (\code{LINESTRING}).
}
\description{
Given a set of input line features representing back-burning lines, this
function places sample lines at regular intervals along each input feature,
perpendicular to the local feature angle. The orientation of each sampling
line is set such that it is orthogonal to a smoothed version of the
back-burning line to minimize the influence of any local kinks and turns in
the back-burning line. Sample lines are located at, and either side of, the
mid-point of each input feature. In cases where a back-burning line is curved
or convoluted it is possible for a sampling line from one section to approach
or cross another section. It is also possible that the sampling line might
approach other back-burning lines. The \code{trim_by} argument can be used to
avoid such occurrences. Setting \code{trim_by} to \code{'parent'} will cause
sampling lines to be trimmed to avoid re-approaching the parent back-burning
line; while setting it to \code{'all'} will trim sampling lines based on
their distance to both the parent and other back-burning lines.
}
\examples{
\dontrun{
libary(CERMButils)
library(sf)

# Load back-burning line features from a GeoPackage layer, shapefile etc.
dat_bb <- st_read(...)

# Generate sampling lines at 1km intervals along each # back-burning line.
# Sampling lines extend up to 5km either side of the back-burning line but
# will be trimmed to avoid the line approaching the parent or other
# back-burning lines too closely.
#
dat_sample_points <- make_sample_points(bb,
                                        line_spacing = 1000,
                                        line_half_length = 5000,
                                        trim_by = "all")
}

}
\seealso{
\code{\link{get_progression_times}}
}
